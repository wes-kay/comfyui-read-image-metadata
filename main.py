import argparse
import json
import png

def extract_metadata(image_path):
    """Extract metadata from a PNG file generated by ComfyUI."""
    try:
        with open(image_path, 'rb') as f:
            reader = png.Reader(file=f)
            chunks = reader.chunks()
            
            metadata = {}
            for chunk_type, chunk_data in chunks:
                if chunk_type == b'tEXt':  # Standard metadata text chunk
                    try:
                        decoded_data = chunk_data.decode('utf-8')
                        key, value = decoded_data.split("\x00", 1)
                        metadata[key] = value
                    except Exception:
                        pass
                elif chunk_type == b'zTXt':  # Compressed text metadata
                    pass  # Handle compressed metadata if needed
                elif chunk_type == b'iTXt':  # International text metadata
                    pass  # Handle extended metadata if needed
            
            return metadata
    except Exception as e:
        print(f"Error reading metadata: {e}")
        return {}

def main():
    parser = argparse.ArgumentParser(description="Extract metadata from a ComfyUI-generated PNG file.")
    parser.add_argument("image", type=str, help="Path to the PNG image file")
    args = parser.parse_args()
    
    metadata = extract_metadata(args.image)
    if metadata:
        print(json.dumps(metadata, indent=4))
    else:
        print("No metadata found or unable to read metadata.")

if __name__ == "__main__":
    main()
